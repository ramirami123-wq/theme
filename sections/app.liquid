{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign content_width = section.settings.content_width
  assign full_width = section.settings.full_width

  assign stack_mobile = section.settings.stack_mobile
  assign divider = section.settings.divider
  assign items_gap = section.settings.items_gap
  assign items_gap_mobile = section.settings.items_gap_mobile

  assign divider = section.settings.divider
  assign divider_color = section.settings.divider_color
  
-%}

{%- style -%}
  
  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .style-text-items-{{ section.id }} {
    display: grid;
    grid-template-columns: repeat( auto-fit, minmax(0px, 1fr) );
    gap: {{ items_gap_mobile }}px;
  }
  
  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .style-text-items-{{ section.id }} {
      gap: {{ items_gap }}px;
    }
  }
  
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}rem;
    }
  </style>
{% endunless %}

{% if stack_mobile %}
  <style>
    .style-text-items-{{ section.id }} {
      display: block;
    }

    @media(min-width: 1024px) {
      .style-text-items-{{ section.id }} {
        display: grid;
      }
    }

    {% for block in section.blocks %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child) {
          margin-top: {{ items_gap_mobile }}px;
        }
        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child) {
            margin-top: 0px;
          }
        }
      </style>
    {% endfor %}
  </style>
{% endif %}

{% for block in section.blocks %}
  <style>
      
    {{ block.settings.heading_font | font_face: font_display: 'swap' }}
    {{ block.settings.sub_heading_font | font_face: font_display: 'swap' }}
    {{ block.settings.content_font | font_face: font_display: 'swap' }}
    {{ block.settings.link_font | font_face: font_display: 'swap' }}

    .style-text-item-{{ block.id }} {
      flex: 1 1 auto;
      position: relative;
    }

    .style-text-heading-{{ block.id }} {
      margin: 0;
      font-size: {{ block.settings.heading_size_mobile }}px;
      font-weight: 700;
      line-height: {{ block.settings.heading_height }}%;
      text-transform: unset;
      text-align: {{ block.settings.heading_align }};
    }

    .style-text-subheading-{{ block.id }} {
      margin: 0;
      margin-top: {{ block.settings.sub_heading_mt | times: 0.75 | round: 0 }}px;
      font-size: {{ block.settings.sub_heading_size_mobile }}px;
      font-weight: 600;
      color: {{ block.settings.sub_heading_color }};
      line-height: {{ block.settings.sub_heading_height }}%;
      text-transform: unset;
      text-align: {{ block.settings.sub_heading_align }};
    }

    .style-text-content-{{ block.id }} {
      margin: 0;
      margin-top: {{ block.settings.content_mt | times: 0.75 | round: 0 }}px;
      text-align: {{ block.settings.content_align }};
    }

    .style-text-content-{{ block.id }} p,
    .style-text-content-{{ block.id }} a, 
    .style-text-content-{{ block.id }} li {
      font-size: {{ block.settings.content_size_mobile }}px;
      color: {{ block.settings.content_color }};
      line-height: {{ block.settings.content_height }}%;
      text-transform: unset;
      text-decoration: none;
      transition: all 0.2s ease 0s;
    }

    .style-text-content-{{ block.id }} a {
      transition: all 0.2s ease 0s;
      color: {{ block.settings.link_hover_color }};
    }

    .style-text-link-{{ block.id }} {
      display: block;
      width: fit-content;
      margin: 0;
      margin-top: {{ block.settings.link_mt | times: 0.75 | round: 0 }}px;
      font-size: {{ block.settings.link_size_mobile }}px;
      color: {{ block.settings.link_color }};
      line-height: {{ block.settings.link_height }}%;
      text-transform: unset;
      text-decoration: none;
      transition: all 0.2s ease 0s;
    }

    .style-text-link-{{ block.id }}:hover {
      transition: all 0.2s ease 0s;
      color: {{ block.settings.link_hover_color }};
    }

    @media(min-width: 1024px) {
      .style-text-heading-{{ block.id }} {
        font-size: {{ block.settings.heading_size }}px;
      }

      .style-text-subheading-{{ block.id }} {
        margin-top: {{ block.settings.sub_heading_mt }}px;
        font-size: {{ block.settings.sub_heading_size }}px;
      }

      .style-text-content-{{ block.id }} {
         margin-top: {{ block.settings.content_mt }}px;
      }
      
      .style-text-content-{{ block.id }} p,
      .style-text-content-{{ block.id }} a, 
      .style-text-content-{{ block.id }} li {
        font-size: {{ block.settings.content_size }}px;
      }

      .style-text-link-{{ block.id }} {
        margin-top: {{ block.settings.link_mt }}px;
        font-size: {{ block.settings.link_size }}px;
      }
    }
    
  </style>

  {% if block.settings.heading_custom %}
    <style>
      .style-text-heading-{{ block.id }} {
        font-family: {{ block.settings.heading_font.family }}, {{ block.settings.heading_font.fallback_families }};
        font-weight: {{ block.settings.heading_font.weight }};
        font-style: {{ block.settings.heading_font.style }};
      }
    </style>
  {% endif %}

  {% if block.settings.sub_heading_custom %}
    <style>
      .style-text-subheading-{{ block.id }} {
        font-family: {{ block.settings.sub_heading_font.family }}, {{ block.settings.sub_heading_font.fallback_families }};
        font-weight: {{ block.settings.sub_heading_font.weight }};
        font-style: {{ block.settings.sub_heading_font.style }};
      }
    </style>
  {% endif %}

  {% if block.settings.content_custom %}
    <style>
      .style-text-content-{{ block.id }} p,
      .style-text-content-{{ block.id }} a,
      .style-text-content-{{ block.id }} li {
        font-family: {{ block.settings.content_font.family }}, {{ block.settings.content_font.fallback_families }};
        font-weight: {{ block.settings.content_font.weight }};
        font-style: {{ block.settings.content_font.style }};
      }
    </style>
  {% endif %}

  {% if block.settings.link_custom %}
    <style>
      .style-text-link-{{ block.id }} {
        font-family: {{ block.settings.link_font.family }}, {{ block.settings.link_font.fallback_families }};
        font-weight: {{ block.settings.link_font.weight }};
        font-style: {{ block.settings.link_font.style }};
      }
    </style>
  {% endif %}

  {% if block.settings.heading_style == "fill" %}
    {% if block.settings.heading_gradient_color == blank %}
      <style>
        .style-text-heading-{{ block.id }} {
          color: {{ block.settings.heading_color }};
        }
      </style>
      
    {% else %}
      <style>
        .style-text-heading-{{ block.id }} {
          -webkit-background-clip: text !important;
          color: transparent;
          background: {{ block.settings.heading_gradient_color }};
        }
      </style>
      
    {% endif %}
  {% else %}

    {% if block.settings.heading_gradient_color == blank %}
      <style>
        .style-text-heading-{{ block.id }} {
          -webkit-text-stroke: {{ block.settings.heading_outline_thickness }}px {{ block.settings.heading_color }};
          color: transparent;
        }
      </style>
      
    {% else %}
      <style>
        .style-text-heading-{{ block.id }} {
          -webkit-text-stroke: {{ block.settings.heading_outline_thickness }}px transparent;
          -webkit-background-clip: text !important;
          color: white;
          background: {{ block.settings.heading_gradient_color }};
        }
      </style>

    {% endif %}
    
  {% endif %}

  {% if block.settings.link_style == "button" %}
    <style>
      .style-text-link-{{ block.id }} {
        background-color: {{ block.settings.link_bg_color }};
        padding: {{ block.settings.link_padding_vertical | times: 0.75 | round: 0 }}px {{ block.settings.link_padding_horizontal | times: 0.75 | round: 0 }}px;
        border-radius: {{ block.settings.link_radius }}px;
        border: {{ block.settings.link_thickness }}px solid {{ block.settings.link_border_color }};
      }
      
      .style-text-link-{{ block.id }}:hover {
        color: {{ block.settings.link_hover_color }};
        background-color: {{ block.settings.link_bg_hover_color }};
        border: {{ block.settings.link_thickness }}px solid {{ block.settings.link_border_hover_color }};
        transition: all 0.2s ease 0s;
      }
      
      @media(min-width: 1024px) {
        .style-text-link-{{ block.id }} {
          padding: {{ block.settings.link_padding_vertical }}px {{ block.settings.link_padding_horizontal }}px;
        }
      }
    </style>
  {% endif %}

  {% if divider == "square" %}
    <style>
      .style-text-item-{{ block.id }}:not(:first-child):before {
        content: '';
        position: absolute;
        width: 8px;
        height: 8px;
        background-color: {{ divider_color }}; 
      }

    </style>

    {% if stack_mobile %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          left: 50%;
          transform: translate(-50%, 0);
        }

        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child):before {
            top: 50%;
            left: -{{ items_gap | times: 0.5 | round: 0 }}px;
            transform: translate(0, -50%);
          }
        }
      </style>
      
    {% else %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: 50%;
          left: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          transform: translate(0, -50%);
        }

        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child):before {
            top: 50%;
            left: -{{ items_gap | times: 0.5 | round: 0 }}px;
            transform: translate(0, -50%);
          }
        }
      </style>
    {% endif %}

  {% elsif divider == "circle" %}
    <style>
      .style-text-item-{{ block.id }}:not(:first-child):before {
        content: '';
        position: absolute;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: {{ divider_color }}; 
      }

    </style>

    {% if stack_mobile %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          left: 50%;
          transform: translate(-50%, 0);
        }

        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child):before {
            top: 50%;
            left: -{{ items_gap | times: 0.5 | round: 0 }}px;
            transform: translate(0, -50%);
          }
        }
      </style>
      
    {% else %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: 50%;
          left: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          transform: translate(0, -50%);
        }

        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child):before {
            top: 50%;
            left: -{{ items_gap | times: 0.5 | round: 0 }}px;
            transform: translate(0, -50%);
          }
        }
      </style>
    {% endif %}

  {% elsif divider == "diamond" %}
    <style>
      .style-text-item-{{ block.id }}:not(:first-child):before {
        content: '';
        position: absolute;
        width: 8px;
        height: 8px;
        background-color: {{ divider_color }}; 
      }

    </style>

    {% if stack_mobile %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          left: 50%;
          transform: translate(-50%, 0) rotate(45deg);
        }
        
        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child):before {
              top: 50%;
              left: -{{ items_gap | times: 0.5 | round: 0 }}px;
              transform: translate(0, -50%) rotate(45deg);
            }
        }
      </style>
      
    {% else %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: 50%;
          left: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          transform: translate(0, -50%) rotate(45deg);
        }

        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child):before {
              top: 50%;
              left: -{{ items_gap | times: 0.5 | round: 0 }}px;
              transform: translate(0, -50%) rotate(45deg);
            }
        }
      </style>
    {% endif %}

    {% elsif divider == "line" %}
    <style>
      .style-text-item-{{ block.id }}:not(:first-child):before {
        content: '';
        position: absolute;
        width: 1px;
        height: 100%;
        background-color: {{ divider_color }}; 
      }

    </style>

    {% if stack_mobile %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          width: 100%;
          height: 1px;
          top: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          left: 50%;
          transform: translate(-50%, 0);
        }

        @media(min-width: 1024px) {
          .style-text-item-{{ block.id }}:not(:first-child):before {
            width: 1px;
            height: 100%;
            top: 50%;
            left: -{{ items_gap | times: 0.5 | round: 0 }}px;
            transform: translate(0, -50%);
          }
        }
      </style>
      
    {% else %}
      <style>
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: 50%;
          left: -{{ items_gap_mobile | times: 0.5 | round: 0 }}px;
          transform: translate(0, -50%);
        }

        @media(min-width: 1024px) {
        .style-text-item-{{ block.id }}:not(:first-child):before {
          top: 50%;
          left: -{{ items_gap | times: 0.5 | round: 0 }}px;
          transform: translate(0, -50%);
        }
      }
      </style>
    {% endif %}
    
  {% endif %}

  {% if block.settings.link_align == "center" %}
    <style>
      .style-text-link-{{ block.id }} {
        margin-left: auto;
        margin-right: auto;
      }
    </style>
  {% elsif block.settings.link_align == "right" %}
    <style>
      .style-text-link-{{ block.id }} {
        margin-left: auto;
      }
    </style>
  {% endif %}
  
{% endfor %}

<div class="section-{{ section.id }} style-text-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings style-text-items-{{ section.id }}">
    
      {% for block in section.blocks %}

      <div class="style-text-item-{{ block.id }}">
        
        {% if block.settings.heading != blank %}
          <h2 id="style-text-animation-numbers-{{ block.id }}" data-duration="{{ block.settings.number_duration | times:1000 | round }}"  class="style-text-animation-numbers style-text-heading-{{ block.id }}">{{ block.settings.heading }}</h2>
        {% endif %}

        {% if block.settings.sub_heading != blank %}
          <p class="style-text-subheading-{{ block.id }}">{{ block.settings.sub_heading }}</p>
        {% endif %}

        {% if block.settings.content != blank %}
          <div class="style-text-content-{{ block.id }}">
            {{ block.settings.content }}
          </div>
        {% endif %}

        {% if block.settings.link != blank %}
          <a href="{{ block.settings.link_url }}" class="style-text-link-{{ block.id }}">{{ block.settings.link }}</a>
        {% endif %}

      </div>
      
      {% endfor %}
      
    </div>
</div>

<script>
  function isElementInViewport(element) {
    const rect = element.getBoundingClientRect();
    return (
      rect.top >= 0 &&
      rect.left >= 0 &&
      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
      rect.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
  }

  function onScroll() {

    let section = document.querySelector('.style-text-{{ section.id }}');
    
    if (isElementInViewport(section)) {
      initStyleText();

      window.removeEventListener("scroll", onScroll);
    }
  }
  
  function initStyleText() {
    const animationFields = [];
    const animFields = document.querySelectorAll('.style-text-animation-numbers');
    {% comment %}
    {% for block in section.blocks %}
      {% if block.settings.number_animation %}
          let animationField{{ forloop.index }} = document.querySelector('#style-text-animation-numbers-{{ block.id }}');
          animationFields.push(animationField{{ forloop.index }});
        {% endif %}
    {% endfor %}

    const animationDurations = [];
    {% for block in section.blocks %}
      {% if block.settings.number_animation %}
          let animationDuration{{ forloop.index }} = {{ block.settings.number_duration | times:1000 | round }}
          animationDurations.push(animationDuration{{ forloop.index }});
        {% endif %}
    {% endfor %}
    {% endcomment %}
    
    if(animFields) {
      animFields.forEach((element,index) => {
        let text = element.innerText;
        let number = parseFloat(text.replace(/[^\d.,-]/g, ''));
        let otherText = text.replace(/[0-9.,]/g, '');
        const animationDuration = parseInt(element.getAttribute('data-duration'));
        
        if(!isNaN(number)) {
          let start = 0;
          let end = number;
          const totalFrames = Math.ceil(animationDuration / 4);
          const step = (end - start) / totalFrames;
          animateValue(element, start, end, step);
  
          function animateValue(element, start, end, step) {
            let current = start;
            let obj = element;
            let frameCount = 0;
            let timer = setInterval(() => {
              current += step;
              frameCount++;
              obj.innerHTML = current.toFixed(countDecimalDigits(end)) + otherText; // Округляем текущее значение до целого числа
              if (frameCount === totalFrames) {
                clearInterval(timer);
              }
            }, 4);
          }

          function countDecimalDigits(number) {
            const decimalPart = number.toString().split(".")[1];
            return decimalPart ? decimalPart.length : 0;
          }
        }
      })
    }
  }

  document.addEventListener("DOMContentLoaded", function() {
    let section = document.querySelector('.style-text-{{ section.id }}');
    if (isElementInViewport(section)) {
      initStyleText();

      window.removeEventListener("scroll", onScroll);
    } else {
      window.addEventListener("scroll", onScroll);    
    }
  
  });
  
  if (Shopify.designMode) {
    document.addEventListener("shopify:section:unload", function() {
      let section = document.querySelector('.style-text-{{ section.id }}');
      if (isElementInViewport(section)) {
        initStyleText();

        window.removeEventListener("scroll", onScroll);
      } else {
        window.addEventListener("scroll", onScroll);    
      }
    
    });
    
    document.addEventListener("shopify:section:load", function() {
      let section = document.querySelector('.style-text-{{ section.id }}');
      if (isElementInViewport(section)) {
        initStyleText();

        window.removeEventListener("scroll", onScroll);
      } else {
        window.addEventListener("scroll", onScroll);        
      }

    });
  }
  
</script>

{% schema %}
  {
    "name": "Counter Up",
    "settings": [
      {
        "type": "header",
        "content": "Section Settings"
      },
      {
        "type": "checkbox",
        "id": "stack_mobile",
        "label": "Stack on Mobile"
      },
      {
        "type": "select",
        "id": "divider",
        "label": "Multiple Text Divider",
        "default": "circle",
        "options": [
         {
            "label": "None",
            "value": "none"
          },
          {
            "label": "Square",
            "value": "square"
          },
          {
            "label": "Circle",
            "value": "circle"
          },
          {
            "label": "Diamond",
            "value": "diamond"
          },
          {
            "label": "Line",
            "value": "line"
          }
        ]
      },
      {
        "type": "range",
        "id": "items_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Multiple Text Gap",
        "default": 50
      },
      {
        "type": "range",
        "id": "items_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Multiple Text Gap - Mobile",
        "default": 50
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full Width"
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 0,
        "max": 400,
        "step": 10,
        "unit": "rem",
        "label": "Section content width",
        "default": 120
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient",
        "info": "When Selected to Replace 'Background Color'"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000",
        "info": "Before you need to choose 'Border Thickness'"
      },
      {
        "type": "color",
        "label": "Divider Color",
        "id": "divider_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 36
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 36
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 5
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 1.5
      }
    ],
    "blocks": [
      {
        "type": "text",
        "name": "Text Block",
        "settings": [
          {
            "type": "header",
            "content": "Heading"
          },
          {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "100%"
          },
          {
            "type": "checkbox",
            "id": "heading_custom",
            "label": "Use Custom Font",
            "default": false
          },
          {
            "type": "font_picker",
            "id": "heading_font",
            "label": "Heading Font Family",
            "default": "assistant_n4"
          },
          {
            "type": "range",
            "id": "heading_size",
            "min": 0,
            "max": 200,
            "step": 2,
            "unit": "px",
            "label": "Heading Size",
            "default": 120
          },
          {
            "type": "range",
            "id": "heading_size_mobile",
            "min": 0,
            "max": 120,
            "step": 2,
            "unit": "px",
            "label": "Heading Size - Mobile",
            "default": 60
          },
          {
            "type": "range",
            "id": "heading_height",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "%",
            "label": "Heading Line Height",
            "default": 100
          },
          {
            "type": "select",
            "id": "heading_align",
            "label": "Heading Text Align",
            "default": "center",
            "options": [
             {
                "label": "Center",
                "value": "center"
              },
              {
                "label": "Left",
                "value": "left"
              },
              {
                "label": "Right",
                "value": "right"
              }
            ]
          },
          {
            "type": "select",
            "id": "heading_style",
            "label": "Heading Style",
            "default": "fill",
            "options": [
             {
                "label": "Fill",
                "value": "fill"
              },
              {
                "label": "Outline",
                "value": "outline"
              }
            ]
          },
          {
            "type": "range",
            "id": "heading_outline_thickness",
            "min": 0,
            "max": 10,
            "step": 1,
            "unit": "px",
            "label": "Heading Outline thickness",
            "default": 1
          },
          {
            "type": "header",
            "content": "Number Animation",
            "info": "Only number can be animated. Dots can be used as separators."
          },
          {
            "type": "checkbox",
            "id": "number_animation",
            "label": "Show Count Up Animation"
          },
          {
            "type": "range",
            "id": "number_duration",
            "min": 0.4,
            "max": 5,
            "step": 0.2,
            "unit": "s",
            "label": "Count Up Duration",
            "default": 3
          },
          {
            "type": "header",
            "content": "Sub-heading"
          },
          {
            "type": "text",
            "id": "sub_heading",
            "label": "Sub-heading",
            "default": "Text about your amazing influence feature"
          },
          {
            "type": "checkbox",
            "id": "sub_heading_custom",
            "label": "Use Custom Font",
            "default": false
          },
          {
            "type": "font_picker",
            "id": "sub_heading_font",
            "label": "Sub-heading Font Family",
            "default": "assistant_n4"
          },
          {
            "type": "range",
            "id": "sub_heading_size",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Sub-heading Size",
            "default": 26
          },
          {
            "type": "range",
            "id": "sub_heading_size_mobile",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Sub-heading Size - Mobile",
            "default": 20
          },
          {
            "type": "range",
            "id": "sub_heading_height",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "%",
            "label": "Sub-heading Line Height",
            "default": 100
          },
          {
            "type": "select",
            "id": "sub_heading_align",
            "label": "Sub-heading Text Align",
            "default": "center",
            "options": [
             {
                "label": "Center",
                "value": "center"
              },
              {
                "label": "Left",
                "value": "left"
              },
              {
                "label": "Right",
                "value": "right"
              }
            ]
          },
          {
            "type": "range",
            "id": "sub_heading_mt",
            "min": 0,
            "max": 100,
            "step": 4,
            "unit": "px",
            "label": "Sub-heading Margin Top",
            "default": 16
          },
          {
            "type": "header",
            "content": "Content"
          },
          {
            "type": "richtext",
            "id": "content",
            "label": "Content"
          },
          {
            "type": "checkbox",
            "id": "content_custom",
            "label": "Use Custom Font",
            "default": false
          },
          {
            "type": "font_picker",
            "id": "content_font",
            "label": "Content Font Family",
            "default": "assistant_n4"
          },
          {
            "type": "range",
            "id": "content_size",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Content Size",
            "default": 18
          },
          {
            "type": "range",
            "id": "content_size_mobile",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Content Size - Mobile",
            "default": 16
          },
          {
            "type": "range",
            "id": "content_height",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "%",
            "label": "Content Line Height",
            "default": 100
          },
          {
            "type": "select",
            "id": "content_align",
            "label": "Content Text Align",
            "default": "center",
            "options": [
             {
                "label": "Center",
                "value": "center"
              },
              {
                "label": "Left",
                "value": "left"
              },
              {
                "label": "Right",
                "value": "right"
              }
            ]
          },
          {
            "type": "range",
            "id": "content_mt",
            "min": 0,
            "max": 100,
            "step": 4,
            "unit": "px",
            "label": "Content Margin Top",
            "default": 16
          },
          {
            "type": "header",
            "content": "Link Settings"
          },
          {
            "type": "text",
            "id": "link",
            "label": "Link"
          },
          {
            "type": "url",
            "id": "link_url",
            "label": "Link URL"
          },
          {
            "type": "checkbox",
            "id": "link_custom",
            "label": "Use Custom Font",
            "default": false
          },
          {
            "type": "font_picker",
            "id": "link_font",
            "label": "Link Font Family",
            "default": "assistant_n4"
          },
          {
            "type": "range",
            "id": "link_size",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Link Size",
            "default": 18
          },
          {
            "type": "range",
            "id": "link_size_mobile",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Link Size - Mobile",
            "default": 16
          },
          {
            "type": "range",
            "id": "link_height",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "%",
            "label": "Link Line Height",
            "default": 100
          },
          {
            "type": "select",
            "id": "link_align",
            "label": "Link Align",
            "default": "center",
            "options": [
             {
                "label": "Center",
                "value": "center"
              },
              {
                "label": "Left",
                "value": "left"
              },
              {
                "label": "Right",
                "value": "right"
              }
            ]
          },
          {
            "type": "select",
            "id": "link_style",
            "label": "Link Style",
            "default": "button",
            "options": [
             {
                "label": "Button",
                "value": "button"
              },
              {
                "label": "Text",
                "value": "text"
              }
            ]
          },
          {
            "type": "range",
            "id": "link_thickness",
            "min": 0,
            "max": 10,
            "step": 1,
            "unit": "px",
            "label": "Link Border thickness",
            "default": 1
          },
          {
            "type": "range",
            "id": "link_padding_horizontal",
            "min": 0,
            "max": 40,
            "step": 4,
            "unit": "px",
            "label": "Link Padding Horizontal",
            "default": 16
          },
          {
            "type": "range",
            "id": "link_padding_vertical",
            "min": 0,
            "max": 40,
            "step": 4,
            "unit": "px",
            "label": "Link Padding Vertical",
            "default": 12
          },
          {
            "type": "range",
            "id": "link_radius",
            "min": 0,
            "max": 100,
            "step": 4,
            "unit": "px",
            "label": "Link Border Radius",
            "default": 28
          },
          {
            "type": "range",
            "id": "link_mt",
            "min": 0,
            "max": 100,
            "step": 4,
            "unit": "px",
            "label": "Link Margin Top",
            "default": 16
          },
          {
            "type": "header",
            "content": "Block Colors"
          },
          {
            "type": "color",
            "label": "Heading Color",
            "id": "heading_color",
            "default": "#000000"
          },
          {
            "type": "color_background",
            "label": "Heading Gradient Color",
            "id": "heading_gradient_color",
            "default": "linear-gradient(180deg, rgba(26, 26, 26, 0.2), rgba(26, 26, 26, 0) 100%)",
            "info": "When Selected to Replace 'Heading Color'"
          },
          {
            "type": "color",
            "label": "Sub-heading Color",
            "id": "sub_heading_color",
            "default": "#000000"
          },
          {
            "type": "color",
            "label": "Content Color",
            "id": "content_color",
            "default": "#000000"
          },
          {
            "type": "color",
            "label": "Link Color",
            "id": "link_color",
            "default": "#000000"
          },
          {
            "type": "color",
            "label": "Link Hover Color",
            "id": "link_hover_color",
            "default": "#CFCDCD"
          },
          {
            "type": "color",
            "label": "Background Color",
            "id": "link_bg_color"
          },
          {
            "type": "color",
            "label": "Background Hover Color",
            "id": "link_bg_hover_color"
          },
          {
            "type": "color",
            "label": "Link Border Color",
            "id": "link_border_color",
            "default": "#000000"
          },
          {
            "type": "color",
            "label": "Link Border Hover Color",
            "id": "link_border_hover_color",
            "default": "#CFCDCD"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Countup Text",
        "blocks": [
          {
            "type": "text"
          },
          {
            "type": "text"
          }
        ]
      }
    ]
  }
{% endschema %}